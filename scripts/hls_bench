#!/usr/bin/env escript
%% -*- erlang -*-
main([Url | Options]) ->
    {Workers, Segments} = parse_options(Options),
    load_deps(),
    hls_bench:start(),
    loop(Workers, Url, Segments),
    timer:sleep(3000);

main(_) ->
    ok.

loop([], _Url, _Segments) ->
    ok;

loop([N | Workers], Url, Segments) ->
    hls_bench_server:start(Url, N, Segments),
    receive 
        _Status ->
            loop(Workers, Url, Segments)
    end.

load_deps() ->
    Dir = filename:dirname(escript:script_name()) ++ "/../",
    Deps = filelib:wildcard(Dir ++ "deps/*/ebin"),
    ok = code:add_paths([Dir ++ "ebin" | Deps]),
    [Env] = load_file_config(Dir ++ "files", "app.config"),
    load_config(Env).

load_config([]) ->
    ok;

load_config([{App, AppEnv} | Env]) ->
    [application:set_env(App, Key, Value) || {Key, Value} <- AppEnv],
    load_config(Env).

load_file_config(Path,File) ->
  case file:path_consult([Path],File) of
    {ok, Env, _Path} -> Env;
     _ -> []
  end.

parse_options(Options) ->
    parse_options(Options, []).

parse_options([], Acc) ->
    {lists:reverse(Acc), 20};

parse_options(["-s", N], Acc) ->
    {lists:reverse(Acc), list_to_integer(N)};

parse_options([N | Options], Acc) ->
    parse_options(Options, [list_to_integer(N) | Acc]).